[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm2llm-bridge"
version = "1.0.0"
description = "Eine universelle Middleware fÃ¼r bidirektionale LLM-Kommunikation und Workflow-Orchestrierung"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LLM2LLM-Bridge Team"}
]
maintainers = [
    {name = "LLM2LLM-Bridge Team"}
]
keywords = [
    "llm",
    "ai",
    "machine-learning",
    "openai",
    "anthropic",
    "google",
    "workflow",
    "orchestration",
    "middleware"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "python-dotenv",
    "google-generativeai>=0.3.0",
    "langfuse>=2.20.0",
    "pyyaml",
    "requests"
]

[project.optional-dependencies]
api = [
    "fastapi",
    "uvicorn[standard]"
]
dashboard = [
    "streamlit",
    "pandas",
    "plotly"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints"
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio",
    "black",
    "isort",
    "flake8",
    "mypy"
]
all = [
    "llm2llm-bridge[api,dashboard,docs,dev]"
]

[project.urls]
Homepage = "https://github.com/your-org/llm2llm-bridge"
Documentation = "https://llm2llm-bridge.readthedocs.io/"
Repository = "https://github.com/your-org/llm2llm-bridge.git"
Issues = "https://github.com/your-org/llm2llm-bridge/issues"
Changelog = "https://github.com/your-org/llm2llm-bridge/blob/main/CHANGELOG.md"

[project.scripts]
llm-bridge = "app.core.cli:main"

[tool.setuptools]
packages = ["app.core"]

[tool.setuptools.package-data]
app.core = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app.core"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "anthropic.*",
    "google.generativeai.*",
    "langfuse.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"